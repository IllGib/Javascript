// Write code below üíñ
console.log(" Pozole rojo ")
console.log(" ingredientes ")
console.log(" 1 kilo de ma√≠z pozolero precocido ")
console.log("1 kilo de carne de puerco cortada en cubos")
console.log("Para servir ")
console.log("1 lechuga romana picada ")
console.log("1 cebolla peque√±a picada ")
console.log(" Tostadas de ma√≠z ")
console.log(" Modo de preparaci√≥n")
console.log("Nada como un tradicional pozole para celebrar estas Fiestas Patrias. ¬°Con tu saz√≥n y el sabor de La Villita no quedar√° para el recalentado!");
console.log("Agrega el ma√≠z, la cabeza de ajo y sal a tu gusto en una olla grande, cubre con agua y cocina a fuego medio durante 2 horas.");
console.log("Posteriormente agrega la carne a la olla y cocina durante una hora o hasta que la carne est√© suave. Retira la cabeza de ajo.");
console.log("Sirve agua en una olla aparte para hervir el jitomate y los chiles hasta que est√©n suaves, quita las semillas y el rabo de los chiles y licua con el jitomate, sal, or√©gano, comino y un diente de ajo. Cuela y reserva.");
console.log("Decora con lechuga picada, cebolla y jugo de lim√≥n. Acompa√±a con tostadas con crema espolvoreadas con queso panela La Villita.");

/*The console*/
console.log("==================================");
console.log("         McDONALD'S RECEIPT       ");
console.log("----------------------------------");
console.log("           Order Details          ");
console.log("----------------------------------");
console.log(" Item            Quantity   Price ");
console.log("----------------------------------");
console.log("üçî Burger       1          2.99   ");
console.log("üçü Fries        1          2.49   ");
console.log("ü•§ Soda         1          1.99   ");
console.log("----------------------------------");
console.log("Total                      7.47   ");
console.log("==================================");


/*Let and Constant*/
const secondName = "Seb√°stian";
const favoriteColor = "Red";

let myAddress = "CDMX";
let mood = "Blessing";

console.log("My profile: ");
console.log(secondName);
console.log(favoriteColor);
console.log(myAddress);
console.log(mood);

myAddress = "Deutchland"
mood ="Sad"
console.log(myAddress);
console.log(mood);

/* Tipos de datos */

/*Crea algunas variables para tu empresa favorita con los siguientes tipos de datos:*/

companyName, una cadena.
foundingYear, un n√∫mero.
isActive, un booleano.
fundingAmount, indefinido.
Impr√≠melos usando console.log().

let companyName ="Industries Mart√≠nez";
let foundingYear ="2025";
let isActive ="true";
let fundingAmount;

console.log(companyName);
console.log(foundingYear);
console.log(isActive);
console.log(fundingAmount);


/* Operadores */

const temperatureFahrenheit ="70";
const temperatureCelsius =(temperatureFahrenheit-32)/1.8;

console.log(temperatureCelsius);

/* Exponents */

let peso= 61;
let estatura= 1.60;

let imc = peso/(estatura**2);

console.log(imc);

Aqu√≠ hay un resumen de todo lo que aprendimos en este cap√≠tulo:
let y const palabras clave.
Tipos de datos: n√∫meros, cadenas, booleanos, nulos e indefinidos.
Operadores aritm√©ticos: +, -, *, /.
%El operador m√≥dulo encuentra el resto de la divisi√≥n entre dos n√∫meros.
**El operador exponente eleva un n√∫mero a la potencia de otro n√∫mero.
¬°Junt√©moslo todo una vez m√°s!

/*Estamos en el a√±o 2099‚Ä¶ ¬°ya podemos tomarnos unas vacaciones en la Luna o Marte! üöÄ
Cree un programa de conversi√≥n de peso que:

Toma tu peso en la Tierra.
Lo convierte a tu peso en la Luna o en Marte.
Para calcular tu peso en Marte:
destino _ peso‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã=tierra _ peso‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã√ó0.38

La salida del programa deber√≠a verse as√≠:*/

Your weight on Earth is 210 pounds.
Your weight on Mars is 79.8 pounds.

const peso_tierra= 61;
const peso_marte = peso_tierra*0.38;
console.log(" Tu peso en la tierra es " + peso_marte + "Kilogramos");
console.log(" Tu peso en Marte es " + peso_tierra + "Kilogramos");

/*Condicionales con Math.random*/
let num = Math.random();

if (num > 0.5) {
  console.log("Heads");
} else {
  console.log("Tails");
}

/* Cree un programa good-morning.js que imprima un mensaje si es temprano en el d√≠a.

Define una hourvariable y dale la hora actual del d√≠a.

Escriba una if declaraci√≥n para lo siguiente:

Si hour< 12, imprime ‚ÄúBuenos d√≠as üåû‚Äù y algunas de tus rutinas matutinas.
Despu√©s de ejecutar el c√≥digo, cambie hourel valor de y ejec√∫telo de nuevo. Repita esto varias veces para asegurarse de que el programa funcione correctamente.*/

let hour = 14;

if (hour < 12) {
  console.log("Good Morning  üåû");
} else {
  console.log("Good Afternoon");
}


/* En qu√≠mica, el pH es una escala utilizada para especificar la acidez o basicidad de un fluido.

Cree un programa ph-levels.js que verifique si un nivel de pH es b√°sico, √°cido o neutro.

Primero, crea una variable llamada ph y as√≠gnale un valor entre 0 y 14.

Escriba una declaraci√≥n if/ else if/ elseque:

Si phes mayor que 7, salida ‚ÄúB√°sico‚Äù.
De lo contrario, si phes menor que 7, salida ‚Äú√Åcido‚Äù.
De lo contrario, salida ‚ÄúNeutral‚Äù. */

let ph = 10;
if (ph > 7) {
  console.log(" B√°sico");
} else if(ph < 7){
  console.log(" √Åcido ");
} else {
  console.log(" Neutral ");
}

/*Game 8 bale  */

The Magic 8 Ball is a popular office toy and children's toy invented in the 1940's for fortune-telling and advice seeking. üé±

It's an oversized 8 ball with some of the following answers:

Yes - definitely.
It is decidedly so.
Without a doubt.
Reply hazy, try again.
Ask again later.
Better not tell you now.
My sources say no.
Outlook not so good.
Very doubtful.
Create a magic8.js program that can respond to any Yes or No questions with a different answer each time it executes.

The output should have the following format:

Question:       [Question]
Magic 8 Ball:   [Answer]

Question:       Is Cod√©dex better than Udemy yet?
Magic 8 Ball:   Better not tell you now.



const question =" Put question string here"

const randonNumber = Math.floor(Math.random()*9) + 1;

let  answer = "";

if (randonNumber === 1){
  answer = 'Yes - definitely';
}  else if (randonNumber === 2) {
  answer = 'It is decidedly so'
} else if (randonNumber === 3) {
  answer = 'Without a doubt'
} else if (randonNumber === 4) {
  answer = 'Reply hazy, try again'
} else if (randonNumber === 5) {
  answer = 'Ask again later'
} else if (randonNumber === 5) {
  answer = 'Better not tell you now'
} else if (randonNumber === 6) {
  answer = 'My sources say no'
} else if (randonNumber === 7) {
  answer = 'Outlook not so good'
} else if (randonNumber === 8) {
  answer = 'Very doubtful'
} else if (randonNumber === 9) {
  answer = 'Very doubtful'
} else {
  answer = 'error'
}

console.log("Question: ", question);
console.log("Answer: ", answer);

/*Operadores l√≥gicos*/

En el verano de 2023, el humo de los incendios forestales en Canad√° gener√≥ preocupaci√≥n sobre el √≠ndice de calidad del aire (ICA) en la zona.

Cree un programa air-quality-index.js .

Busque en Google el IQA de su √°rea y defina una aqi variable con ese n√∫mero.

Escriba una declaraci√≥n if// con la siguiente l√≥gica:else ifelse

Si aqiest√° entre 0 y 50, imprime "Bueno".
De lo contrario, si aqiest√° entre 51 y 100, imprime "Moderado".
De lo contrario, si aqiest√° entre 101 y 150, imprime "No saludable (grupos sensibles)".
De lo contrario, si aqiest√° entre 151 y 200, imprime "No saludable".
De lo contrario, si aqiest√° entre 201 y 300, imprime "Muy insalubre".
De lo contrario, escriba "Peligroso".

const aqi = 40;

if (aqi >= 0 && aqi <= 50){
  console.log("Good");
}else if (aqi >= 51 && aqi <= 100) {
  console.log("Moderate");
} else if (aqi >= 101 && aqi <= 150) {
  console.log("Unhealthy (Sensitive Groups)");
} else if (aqi >= 151 && aqi <= 200) {
  console.log("Unhealthy");
} else if (aqi >= 201 && aqi <= 300) {
  console.log("Very Unhealthy");
} else {
  console.log("Hazardous");
}

/* Rock Paper Scissor Game*/

Rock Paper Scissors is a classic game that resonates with folks from around the world. The rules are as follows:

Rock beats Scissors.
Scissors beat Paper.
Paper beats Rock.
Let's use conditionals, the random number generator, and create a program that simulates the game between the player and the computer!

Begin with a player variable and give it a 0 to represent "Rock", a 1 to represent "Paper", or a 2 to represent "Scissors."

Then use Math.random() to generate a number between 0 and 2 for another computer variable.

Then, use conditionals to compare the values of player and computer to see who wins!



//piedra = 0
//papel = 1
//tijera = 2

// rock paper Scissor

const player = 1;
let machine = Math.floor(Math.random() * 3);

if (player === 0){
  if (machine === 0) {
    console.log("Draw");
  } else if (machine === 1) {
    console.log("The machine won!");
  } else if (machine === 2) {
    console.log("The player won!");
  } else {
    console.log(" An error ocurred");
  }
} else if (player === 1) {
  if (machine === 0) {
    console.log("The player won!");
  } else if (machine === 1) {
    console.log("Draw!");
  } else if (machine ===2) {
    console.log("The machine won!");
  }else {
    console.log("An error ocurred");
  }
} else if (player === 2) {
  if(machine === 0) {
    console.log("The machine won!");
  } else if (machine === 1) {
    console.log("The player won!");
  } else if (machine === 2) {
    console.log("Draw");
  } else {
    console.log("An error ocurred");
  }
} else {
  console.log("An error ocurred");
}


/* Loops o  bucles*/

//Duck duck goose  ü¶Ü
//Cod√©dex

let randonNumber = Math.floor(Math.random() * 10);

while (randonNumber !== 7) {
  console.log("Duck  ü¶Ü");
  randonNumber = Math.floor(Math.random() * 10)
}

console.log("Goose! ü¶¢");
}

//  bucles while
// while (condition) {
  // Code here

const luckyNumber = 7;

let guess = Math.floor(Math.random() * 10) + 1;

while (guess !== luckyNumber) {
  console.log(`Nope, it isn't ${guess});
  guess = Math.floor(Match.random() * 10) + 1;
}

console.log(My lucky number is ${luckyNumber}!');


// bucles iteradores y ciclos for

for(let i = 1; i <= 100; i++){
  console.log("I Must Not Tell Lies");
}

//continue iteradores y bucles

for (let i = 1; i <= 50; i++  ) {
  if (i % 2 === 1) {
    continue;
  } else if (i === 42) {
    console.log(i);
    break;
  } else {
    console.log(i);
  }
}

// based numbers

Puedes utilizar bucles para realizar las mismas operaciones una y otra vez.
Un while bucle se ejecuta mientras se cumpla una condici√≥n true.
Un for bucle se ejecuta una cierta cantidad de veces, seg√∫n una variable de iterador.
La continue palabra clave finaliza la iteraci√≥n actual en un bucle, dada una true condici√≥n.
La break palabra clave sale completamente del bucle, dada una true condici√≥n.
Utilicemos nuestro nuevo conocimiento de los bucles de JavaScript para crear un programa que convierta un entero en su n√∫mero binario equivalente .
Nota: Los n√∫meros binarios son "base 2", lo que significa que est√°n representados por 0 y 1.
En un archivo based-numbers.js , cree un programa que comience con una myNumber variable, inicializada en un entero de su elecci√≥n, seguido de una binary variable establecida en una cadena vac√≠a.
A continuaci√≥n, utilice un bucle para ir de myNumber a 0, reduciendo myNumber a la mitad cada vez (es decir, Math.floor(num / 2)).
Hagamos lo siguiente en cada iteraci√≥n:
Determinar si el valor actual de myNumber se puede dividir por 2.
Si es as√≠, agr√©guelo "0"a binary.
De lo contrario, agregue "1".




const myNumber = 30;
let binary = "";

// with while loop
let i = myNumber;
binary = "";
while (i >= 1) {
  if (i % 2 == 0) {
    binary = "0" + binary;
  } else {
    binary = "1" + binary;
  }
  i = Math.floor(i/2);
}

console.log('Wit the loop: ' + binary);

//with for loop
for (let i = myNumber; i >= 1; i = Math.floor(i/2)){
  if (i % 2 == 0) {
    binary = "0" + binary;
  } else {
    binary = "1" + binary;
  }
}
console.log('With for loop: ' + binary;);
